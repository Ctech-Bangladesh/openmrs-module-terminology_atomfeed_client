<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="trclient-atomfeed-20151209-2116" context="setup" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="markers"/>
            </not>
        </preConditions>
        <comment>Creating table markers if not present already</comment>
        <createTable tableName="markers">
            <column name="feed_uri" type="varchar(255)">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="last_read_entry_id" type="varchar(255)"/>
            <column name="feed_uri_for_last_read_entry" type="varchar(255)"/>
        </createTable>
    </changeSet>

    <changeSet id="trclient-atomfeed-20151209-2117" context="setup" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="failed_events"/>
            </not>
        </preConditions>
        <comment>Creating table failed_events if not present already</comment>
        <createTable tableName="failed_events">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="feed_uri" type="varchar(255)"/>
            <column name="failed_at" type="timestamp"/>
            <!-- TODO: change to CLOB -->
            <column name="error_message" type="mediumtext"/>
            <column name="event_id" type="varchar(255)"/>
            <!-- TODO: change to CLOB -->
            <column name="event_content" type="mediumtext"/>
            <column name="error_hash_code" type="int"/>
            <column name="title" type="varchar(255)"></column>
        </createTable>
    </changeSet>

    <changeSet id="trclient-atomfeed-20151209-2118" author="Dubey,Sukreet" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="title" tableName="failed_events"/>
            </not>
        </preConditions>
        <comment>Creating column failed_events.title</comment>
        <addColumn tableName="failed_events">
            <column name="title" type="varchar(255)"></column>
        </addColumn>
    </changeSet>

    <changeSet id="trclient-atomfeed-20151209-2119" context="setup" author="utsab">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(*) from information_schema.columns where column_name='retries' and table_name = 'failed_events';
            </sqlCheck>
        </preConditions>
        <comment>Add column 'retries' and not null constraint, if does not exists</comment>
        <addColumn tableName="failed_events">
            <column name="retries" type="int"/>
        </addColumn>
        <addNotNullConstraint columnDataType="int"
                              columnName="retries"
                              defaultNullValue="0"
                              tableName="failed_events"/>
    </changeSet>
    <changeSet id="trclient-atomfeed-20151209-2120" author="tw" context="setup">
        <comment>changing failed_events.event_content column type to mediumtext</comment>
        <modifyDataType columnName="event_content"
                        newDataType="mediumtext"
                        tableName="failed_events"/>
    </changeSet>

    <changeSet id="trclient-atomfeed-20151209-2121" author="Dubey,Sukreet" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="failed_event_retry_log"/>
            </not>
        </preConditions>
        <comment>Create table failed_event_retry_log if does not exists</comment>
        <createTable tableName="failed_event_retry_log">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="feed_uri" type="varchar(255)"/>
            <column name="failed_at" type="timestamp"/>
            <column name="error_message" type="mediumtext"/>
            <column name="event_id" type="varchar(255)"/>
            <column name="event_content" type="mediumtext"/>
            <column name="error_hash_code" type="int"/>
        </createTable>
    </changeSet>
    <changeSet id="trclient-atomfeed-20151209-2122" author="tw" context="setup">
        <comment>changing failed_event_retry_log.event_content column type to mediumtext</comment>
        <modifyDataType columnName="event_content"
                        newDataType="mediumtext"
                        tableName="failed_event_retry_log"/>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-1" author="John, Balaji">
        <insert tableName="scheduler_task_config">
            <column name="name" value="Terminology Feed Task"/>
            <column name="schedulable_class" value="org.bahmni.module.terminology.task.ConceptFeedTask"/>
            <column name="start_time" valueDate=" now() "/>
            <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss"/>
            <column name="repeat_interval" value="15"/>
            <column name="start_on_startup" value="1"/>
            <column name="started" value="1"/>
            <column name="created_by" value="1"/>
            <column name="date_created" valueDate=" now() "/>
            <column name="uuid" valueComputed=" uuid() "/>
        </insert>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-2" author="John, Utsab">
        <update tableName="scheduler_task_config">
            <column name="schedulable_class" value="org.bahmni.module.terminology.task.ConceptFeedTask"/>
            <where>name = "Terminology Feed Task"</where>
        </update>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-4" author="John, Utsab">
        <update tableName="scheduler_task_config">
            <column name="schedulable_class"
                    value="org.bahmni.module.terminology.infrastructure.atomfeed.ConceptFeedTask"/>
            <where>name = "Terminology Feed Task"</where>
        </update>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-7" author="Sumit, Balaji">
        <insert tableName="scheduler_task_config">
            <column name="name" value="Concept Reference Term Feed Feed Task"/>
            <column name="schedulable_class" value="org.bahmni.module.terminology.infrastructure.atomfeed.ConceptReferenceTermFeedTask"/>
            <column name="start_time" valueDate=" now() "/>
            <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss"/>
            <column name="repeat_interval" value="15"/>
            <column name="start_on_startup" value="1"/>
            <column name="started" value="1"/>
            <column name="created_by" value="1"/>
            <column name="date_created" valueDate=" now() "/>
            <column name="uuid" valueComputed=" uuid() "/>
        </insert>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-8" author="John">
        <insert tableName="scheduler_task_config">
            <column name="name" value="Terminology Feed Retry Task"/>
            <column name="schedulable_class" value="org.bahmni.module.terminology.infrastructure.atomfeed.ConceptFeedRetryTask"/>
            <column name="start_time" valueDate=" now() "/>
            <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss"/>
            <column name="repeat_interval" value="120"/>
            <column name="start_on_startup" value="1"/>
            <column name="started" value="1"/>
            <column name="created_by" value="1"/>
            <column name="date_created" valueDate=" now() "/>
            <column name="uuid" valueComputed=" uuid() "/>
        </insert>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-10" author="Neha" context="setup">
        <sql>
            update scheduler_task_config set repeat_interval = 13 where name = 'Concept Reference Term Feed Feed Task';
            update scheduler_task_config set repeat_interval = 31 where name = 'Terminology Feed Task';
        </sql>
    </changeSet>

    <changeSet id="terminology-atomfeed-client-11" author="Anshu, Dubey">
        <insert tableName="scheduler_task_config">
            <column name="name" value="Medication Feed Task"/>
            <column name="schedulable_class" value="org.bahmni.module.terminology.infrastructure.atomfeed.MedicationFeedTask"/>
            <column name="start_time" valueDate=" now() "/>
            <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss"/>
            <column name="repeat_interval" value="15"/>
            <column name="start_on_startup" value="1"/>
            <column name="started" value="1"/>
            <column name="created_by" value="1"/>
            <column name="date_created" valueDate=" now() "/>
            <column name="uuid" valueComputed=" uuid() "/>
        </insert>
    </changeSet>
    <changeSet id="terminology-atomfeed-client-14" author="neha,angshu" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="shr_id_mapping"></tableExists>
            </not>
        </preConditions>
        <comment>Create a mapping table for external id to internal id mapping</comment>
        <createTable tableName="shr_id_mapping">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="internal_id" type="varchar(50)"></column>
            <column name="external_id" type="varchar(50)"></column>
            <column name="type" type="varchar(50)"></column>
            <column name="uri" type="varchar(150)"></column>
        </createTable>
    </changeSet>
    <changeSet id="terminology-atomfeed-client-15" author="neha,angshu" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <indexExists indexName="idx_shr_id_mapping_internal_id"/>
            </not>
        </preConditions>
        <comment>Creating index shr_id_mapping.internal_id</comment>
        <createIndex indexName="idx_shr_id_mapping_internal_id" tableName="shr_id_mapping">
            <column name="internal_id" type="varchar(50)"/>
        </createIndex>
    </changeSet>
    <changeSet id="terminology-atomfeed-client-16" author="neha,angshu" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <indexExists indexName="idx_shr_id_mapping_external_id"/>
            </not>
        </preConditions>
        <comment>Creating index shr_id_mapping.external_id</comment>
        <createIndex indexName="idx_shr_id_mapping_external_id" tableName="shr_id_mapping">
            <column name="external_id" type="varchar(50)"/>
        </createIndex>
    </changeSet>
    <changeSet id="terminology-atomfeed-client-17" author="neha,angshu" context="setup">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="last_sync_datetime" tableName="shr_id_mapping"/>
            </not>
        </preConditions>
        <comment>Creating column shr_id_mapping.last_sync_datetime</comment>
        <addColumn tableName="shr_id_mapping">
            <column name="last_sync_datetime" type="datetime" defaultValueComputed="now()"></column>
        </addColumn>
    </changeSet>
</databaseChangeLog>